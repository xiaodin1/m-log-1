<?xml version="1.0" encoding="utf-8" ?>
<project name="M-Log" default="compile-to-web" basedir=".">

	<property name="project.name" value="M-LOG" />
	<property name="project.version" value="1.5.1" />

	<property name="src.dir" value="${basedir}/src" />
	<property name="config.dir" value="${basedir}/config" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="web.dir" value="${basedir}/web" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="dist.doc.dir" value="${dist.dir}/doc" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.config.dir" value="${build.dir}/config" />
	<property name="encoding" value="UTF-8" />

	<path id="project.class.path">
		<pathelement location="${web.dir}/WEB-INF/classes" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<target name="init">
		<echo message="---------- ${project.name} ${project.version} ----------" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${web.dir}/WEB-INF/lib" />
		<mkdir dir="${web.dir}/WEB-INF/classes" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.config.dir}" />
	</target>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<copy todir="${web.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="servlet-api-3.0.jar" />
				<exclude name="jsp-api.jar" />
			</fileset>
		</copy>
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="compile" depends="init" description="Compile java source to bytecode">
		<javac encoding="${encoding}" srcdir="src" includes="**" destdir="${build.classes.dir}" source="1.6" target="1.6" nowarn="true" debug="true" debuglevel="lines,vars,source" includeantruntime="on">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="${build.config.dir}">
			<fileset dir="src" excludes="**/*.java" />
			<fileset dir="${config.dir}" includes="**/*" />
		</copy>
	</target>

	<target name="re-compile-to-web">
		<antcall target="clean" />
		<antcall target="compile-to-web" />
	</target>

	<target name="compile-to-web" depends="compile" description="Compile to web">
		<antcall target="libs" />
		<copy todir="${web.dir}/WEB-INF/classes">
			<fileset dir="${build.classes.dir}" includes="**/*">
			</fileset>
			<fileset dir="${build.config.dir}" includes="**/*">
			</fileset>
		</copy>
	</target>


	<target name="jar" depends="compile" description="Create jar">
		<jar destfile="${dist.dir}/${project.name}.jar">
			<fileset dir="${build.classes.dir}">
				<exclude name="*.*" />
			</fileset>
		</jar>
	</target>

	<target name="install" depends="clean, jar" description="Create WAR deployment unit">
		<war destfile="${dist.dir}/${project.name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}" excludes="WEB-INF/**" />
			<webinf dir="${web.dir}/WEB-INF">
				<exclude name="classes/**" />
				<exclude name="web.xml" />
			</webinf>
			<classes dir="${build.config.dir}">
				<include name="*.*" />
			</classes>
			<lib dir="${dist.dir}" includes="${project.name}.jar" />
			<lib dir="${lib.dir}" includes="*.jar" excludes="servlet-api-3.0.jar" />
			<exclude name="uploads/**" />
		</war>
	</target>

	<target name="javadoc">
		<delete dir="${dist.doc.dir}" />
		<mkdir dir="${dist.doc.dir}" />
		<javadoc2 encoding="UTF-8" docencoding="GBK" packagenames="org.mspring.*" sourcepath="${src.dir}" destdir="${dist.doc.dir}" protected="true" author="true" version="true" splitindex="false" noindex="false" windowtitle="${project.name}" doctitle="${project.name}" bottom="&lt;small&gt;Copyright &amp;copy; 20011-2012 M-Spring Corporation Ltd.&lt;/small&gt;" serialwarn="false">
			<group title="M-Spring Blog" packages="org.mspring" />

		</javadoc2>
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="${build.dir}" failonerror="false" />
		<delete dir="${dist.dir}" failonerror="false" />
		<delete dir="${basedir}/bin" failonerror="false" />
		<delete dir="${web.dir}/WEB-INF/classes" failonerror="false" />
		<delete dir="${web.dir}/WEB-INF/lib" failonerror="false" />
	</target>

</project>
